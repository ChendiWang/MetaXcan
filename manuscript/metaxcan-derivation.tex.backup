% Template for PLoS
% Version 1.0 January 2009
%
% To compile to pdf, run:
% latex plos.template
% bibtex plos.template
% latex plos.template
% latex plos.template
% dvipdf plos.template

\documentclass[10pt]{article}

% amsmath package, useful for mathematical formulas
\usepackage{amsmath}
% amssymb package, useful for mathematical symbols
\usepackage{amssymb}

\usepackage{soul}

% graphicx package, useful for including eps and pdf graphics
% include graphics with the command \includegraphics
\usepackage{graphicx}

% cite package, to clean up citations in the main text. Do not remove.
\usepackage{cite}

\usepackage{color} 

% Use doublespacing - comment out for single spacing
\usepackage{setspace} 
\doublespacing


% Text layout
\topmargin 0.0cm
\oddsidemargin 0.5cm
\evensidemargin 0.5cm
\textwidth 16cm 
\textheight 21cm

% Bold the 'Figure #' in the caption and separate it with a period
% Captions will be left justified
\usepackage[labelfont=bf,labelsep=period,justification=raggedright]{caption}

% Use the PLoS provided bibtex style
\bibliographystyle{plos2009}

% Remove brackets from numbering in List of References
\makeatletter
\renewcommand{\@biblabel}[1]{\quad#1.}
\makeatother


% Leave date blank
\date{}

\pagestyle{myheadings}
%% ** EDIT HERE **


%% ** EDIT HERE **
%% PLEASE INCLUDE ALL MACROS BELOW

%% END MACROS SECTION

\begin{document}

%% Title must be 150 characters or less
%\begin{flushleft}
%{\Large
%\textbf{Title}
%}
%% Insert Author names, affiliations and corresponding author email.
%\\
%Author1$^{1}$, 
%Author2$^{2}$, 
%Author3$^{3,\ast}$
%\\
%\bf{1} Author1 Dept/Program/Center, Institution Name, City, State, Country
%\\
%\bf{2} Author2 Dept/Program/Center, Institution Name, City, State, Country
%\\
%\bf{3} Author3 Dept/Program/Center, Institution Name, City, State, Country
%\\
%$\ast$ E-mail: Corresponding author@institute.edu
%\end{flushleft}
%
%% Please keep the abstract between 250 and 300 words
\section*{Abstract}

Effective integration of functional data such as the ones generated by GTEx and other efforts are needed to gain biological insights from the discoveries made by GWAS and meta analysis studies. We have proposed PrediXcan, a gene-based approach that tests regulatory mechanisms through which genetic variation alter phenotype. The method consists of estimating the genetically determined levels of gene expression and correlating these with the phenotypes to test the mediating effects of a gene. In other words, it imputes the transcriptome based on genetic data and looks for association between the imputed transcriptome and the phenotype. Given consent limitations and other hurdles that retrict access to individual level data and the large computational cost associated with the handling of these large scale data, we have developed an extension to our method, termed MetaXcan, to infer the association test statistics based solely on summary statistics from traditional GWAS output. We will describe the mechanistic motivation underlying the method, comparison with other gene-based methods, application to WTCCC and other GWAS datasets, and the publicly available database and software tools to implement MetaXcan. \hl{TODO (copied from ASHG session abstract, will modify later)}

% Please keep the Author Summary between 150 and 200 words
% Use first person. PLoS ONE authors please skip this step. 
% Author Summary not valid for PLoS ONE submissions.   

%\section*{Author Summary}
%
\section*{Pending Introduction}
%
GWAS successes and problems\\

Gene expression modulation as mechanism\\

PrediXcan brief description\\

Meta analysis successes\\

Here we present a method termed MetaXcan which is a fast and efficient way to scale up implementation of PrediXcan.\\

\section*{Introduction Outline}

Genome-wide association studies (GWAS) have proven to be an able tool at finding associations between phenotype traits and genetic variants,
without needing much, if any, genomic information or knowledge. 
However, current GWA studies tend to depend on ever increasing sample sizes to detect new findings, 
and genetic variations detected by this method tend to factor only small disease risk changes at poor predictive values. \hl{expand, references}
These facts have served as a major drive toward new methods that are biologically informed, gene-based approaches among them.
One such method is PrediXcan \hl{(reference, references?, expand?)}, that is concerned with aggregating SNPS
into a Genetic Regulated Expression model ($\widehat{GReX}$) and then associating this $\widehat{GReX}$ with a phenotype of interest.
This method, in turn, has identified potentially interesting genes for  medical applications. It sports interesting features such as 
flexibility, relatibly cheap computational costs, and ability to address both common or rare variants, among others.

Building on PrediXcan premises, we hereby present a new method called MetaXcan, that allows for assotiation estimation
conceptually identical to PrediXcan's results, that by way of input requires only for summary statistics, like traditional GWAS results.
This new method has fairly low computational costs, and takes advantage of precomputed ``reference'' statistics that allow
not only for greater computational speed, but also for greater ease of use, as no individual-level data is required for its use.



\section*{Results}

\subsubsection*{MetaXcan formula}

In essence, PrediXcan's result for each gene is the regression of the phenotype of interest over a linear combination of SNP data, whereas GWAS consists of regressing the phenotype on individual SNPs. The regression coefficients (and standard errors) obtained from the GWAS can be combined to infer the regression of the phenotype on the linear combination of SNPs. This is demonstrated in the method's section where we derive the analytical equations that relate the PrediXcan and GWAS results. 

The input for the exact MetaXcan formula consists of: 
\begin{itemize}
\item $w_l$: effect size (or weight) of SNP $l$ at a Genetically Regulated Expression estimation for gene $g$ ($\widehat{GReX}$, available in \hl{TODO reference to PredictDB})
\item $\hat\beta_l$: GWAS regression coefficients for SNP $l$
\item $\sigma_l$ and $\Gamma_g$: variance and covariances of SNP $l$ in the model of the gene
\item $\sigma_Y$ and $n$: variance of the phenotype and sample size
\end{itemize}

These requirements may be to stringent. For example, the last two items, variance of the phenotype and sample size, may not be available in many use cases. 

For the equality to hold exactly, we need the variances and covariances of the genotype data in the study cohort. Even though they can be estimated based on GWAS results, we found that the plain results are not insensitive to differences between the reference and study populations, such as significally divergent allele frequencies, or variances. The next sections will develop this further.

%The last two items, variance of the phenotype and sample size, may not be available in many use cases. Even though they can be estimated based on GWAS results but we found that the final results are not robust to allele frequency differences between the reference and study populations. More discussion later. Next, we derive a modestly conservative (to avoid falso positive results) approximation that performed well for a range of use case scenarios.
%
\subsubsection*{Performance relative to PrediXcan}

In order to make the method robust and broaden its aplicability, we introduced a modestly conservative approximation that performed well for a range of use case scenarios, while avoiding false positives. This also allows dissemination of the method through the use of summary statistics that can be safely disclosed, even if they are based on ordinarily sensitive or restricted genetic individuals' data.

\subsubsection*{Approximate formula}

In our analysis, there are two main sources of approximation.

\begin{itemize}
 \item Variances and covariances of SNPs in the study were replaced by variances and covariances from selected populations such as Thousand Genomes.
 \item $\sigma_\epsilon \approx \sigma_Y$
\end{itemize}

The first approximation allows for the use of precomputed variance and covariance values from different populations, thus reducing computational burden, and decoupling the method from sensitive individual's data.

The second approximation works well when the effect size or variance explained by the predicted gene or SNP is small. When the effect sizes are large, the loss in power caused by this approximation is compensated by gain in power due to the larger effect sizes. \hl{TODO(ADD some theoretical justification or quantification of this here)}

The first approximation will be unavoidable in practice since most of the use cases, we will only have summary statistics and not the individual level data needed to compute the variance and covariance of SNP data. The second approximation is not necessary but we have found that the deviation from the approximation is small enough to be ignored.

With this in mind, one arrives to the following formula:

\begin{equation*}
Zg = \sum_{l\in \text{Model}_g} w_{lg} ~\frac{\sigma_l}{\hat\sigma_g} ~  \frac{\hat\beta_l}{\text{se}(\beta_l)} 
% =======
% Zg = \sum_{l\in \text{Model}_g} w_{lg} \frac{\hat\beta_l}{\text{se}(\hat\beta_l)} \frac{\sigma_l}{\hat\sigma_g}
% >>>>>>> 6fb1a98ff5949785f2a2d8324997441ea0c84a46
\end{equation*}

where:

\begin{itemize}
\item $w_l$: weight of SNP $l$ at a gene's $\widehat{GReX}$
\item $\hat\beta_l$: GWAS regression coefficients for each SNP in the predictive model of the gene
\item $\sigma_l$: variance of a SNP in the reference population
\item $\hat\sigma_g$: variance of the genetic model for gene $g$
\end{itemize}

\subsubsection*{Application of the formula}

Of the inputs just mentioned, it is only $\hat\beta_l$ that depends on a specific GWAS study.
The other inputs can be all precompiled into reusable data sets, focusing on different populations
and $\widehat{GReX}$. So, a user of the method would only need to provide a GWAS summary statics
study, and choose from a precomputed ``reference'' support set.

This is actually one of the key advantages of the method. Sensitive individual data can
be aggregated into tissue-informed sets, so as to make the method more accessible
for researchers.

This also means that the method is flexible, as different $\widehat{GReX}$ models
on different populations can be plugged in to reflect different available
biological information.

\subsubsection*{Performance in simulated data}

As a benchmark for MetaXcan, a synthetic phenotype was built using random values
generated with standard normal distribution as phenotype value.

Depression Genes and Network Whole Blood samples data was used to estimate the genetically regulated expression
($\widehat{GReX}$) additive model.

Four sets of individuals were selected from the Thousand Genomes project: one composed exclusively by Africans (662 individuals), 
another by East Asians (504 individuals), another by Europeans (503 individuals), and a last one by the union of the former three.

PrediXcan association results were obtained for the synthetic phenotype at each of these subsets, 
and compared against MetaXcan association results for different population combinations.
This way, the effect of using a study sample over a different reference population could be assessed.

The $z-score$ results for each combination of Study population on each Summary Statistics Reference population 
is displayed in Figure \ref{fig:simulatedgrid},
alongside their corresponding PrediXcan result. As expected, when the populations match exactly,
both methods yield the same results, as can be seen from the diagonal of the plot grid.

A reasonable behaviour was observed for study populations that differed from the reference.
For example, since the European set showed lesser variability, its MetaXcan's results
at the off diagonal places of the plot, 
were better correlated to PrediXcan's results than the other sets. 
Also, the African set, having greater genotype variability, 
showed the greatest deviation from the theoretical behaviour.

Also, there doesn't seem to be a significant effect of the actual total number of SNP's identified for each gene,
as genes with different number of Expression Model SNPs were evenly distributed across the association results range.
In some cases, a few SNPS with high expression weight yielded a high gene association, whereas in another
the contribution of several low weight SNPS contributed to a high association.

\begin{figure}
\includegraphics[width=0.6\textwidth]{plots/simulated_grid.png}
\caption{Comparison of PrediXcan and MetaXcan results for a synthetic phenotype. 
Study populations and MetaXcan reference populations were built from European, African, and Asian
individuals from the 1000 Genomes Project. Gene Expression model was based on Depression Genes and Networks.
Dot color accounts for number of SNPS in each gene.\hl{TODO (WTCCC)}}
\label{fig:simulatedgrid}
\end{figure}

The $p-values$ of MetaXcan results were compared against the uniform distribution,
and we display the output in Figure \ref{fig:qqsimulatedgrid}, in logarithmic scale,
for different population combinations.
As expected, the $p-values$ are uniformly distributed when using ethnically related
population sets for the Study and Summary Statistics Reference populations.
Using a study population that differs from the reference population
yielded less precise results.

\begin{figure}
\includegraphics[width=0.6\textwidth]{plots/qq_simulated_grid.png}
\caption{Q-Q plot of MetaXcan P-Values assuming uniform distribution, for the different combinations of Study and Reference Population from Figure \ref{fig:simulatedgrid}.}
\label{fig:qqsimulatedgrid}
\end{figure}

\subsubsection*{Performance in real data}

A similar analysis to the one from previous section was carried out using intrinsic growth as phenotype, over the same population combinations,
using Whole Blood tissue data from Depresion Genes and Network to train a Gene Expression Model.

Figure \ref{fig:igrowthgrid} shows the comparison of MetaXcan association results and Predixcan association results
for the selected populations. MetaXcan results closely resemble PrediXcan results,
although small differences arise even when usign the same population for the study and the summary statistics reference.

Figure \ref{fig:qqigrowthgrid} shows the Q-Q plot of the $p-values$ for this analysis. When the same study population is used
in the summary statistics, no genes appear as significantly relevant to the phenotype, according to the transcriptome model.

\begin{figure}
\includegraphics[width=0.6\textwidth]{plots/igrowth_grid.png}
\caption{Comparison of PrediXcan and MetaXcan results for a Intrinsic Growth phenotype. 
Study populations and MetaXcan reference populations were built from European, African, and Asian
individuals from the 1000 Genomes Project. Gene Expression model was based on Depression Genes and Networks.
Dot color accounts for number of SNPS in each gene.\hl{TODO (WTCCC)}}
\label{fig:igrowthgrid}
\end{figure}

\begin{figure}
\includegraphics[width=0.6\textwidth]{plots/qq_igrowth_grid.png}
\caption{Q-Q plot of MetaXcan P-Values assuming uniform distribution, for the different combinations of Study and Reference Population from Figure \ref{fig:igrowthgrid}.}
\label{fig:qqigrowthgrid}
\end{figure}

\subsubsection*{Performance on disease phenotypes}

As a final example, Bipolar Disorder and Type I Diabetes phenotypes were analyzed with MetaXcan, and the results were compared to PrediXcan's.
These comparisons are displayed in Figures \ref{fig:T1DMP} and \ref{fig:BDMP}.

Disease study data was extracted from Wellcome Trust Case Control Consortium (WTCCC) in both cases. 
The result of their GWAS association was used as input of MetaXcan, on the European population set
from Thousand Genomes as reference population.

As expected, both methods are highly correlated ($r_{Bipolar Disorder}^2=0.996$ and $r_{Type I Diabetes}^2=0.995$).
Both methods also agreed as to the most highly associated genes, since large effects contribute similarly in both methods.
Dissimilarities are explained by difference sample dosages between the selected reference population,
and the study population.

As a last verification, Bipolar Disorder study data was also ran through MetaXcan, but using 
control cases from WTCCC as reference population (2938 individuals). That is, MetaXcan with a reference population similar to what was used
for PrediXcan (differing only in inclusion of case individuals). There was a small increase in $R^2$, from $0.996$ to $0.997$,
as MetaXcan's result for many genes near the middle range values become a little bit closer to PrediXcan's.
Such a small difference lets us conclude that using the exact same population in the study and the reference
is not vital to the success of the method: only that both have a similar genotype make up.

These findings encourages us to state that the MetaXcan method captures most of the same information as PrediXcan,
while attaining a greater degree of operative ease and convenience.

\begin{figure}
\includegraphics[width=0.6\textwidth]{plots/T1DWB_predixcan_zscore-scatter.png}
\caption{Comparison of PrediXcan results and MetaXcan results for a Type I Diabetes study. 
Diabetes study data was extracted from Wellcome Trust Case Control Consortium,
and MetaXcan reference population were the European individuals from Thousand Genomes Project
(same as in previous sections) }
\label{fig:T1DMP}
\end{figure}

\begin{figure}
\includegraphics[width=0.6\textwidth]{plots/BDWB_predixcan_zscore-scatter.png}
\caption{ Comparison of PrediXcan results and MetaXcan results for a Bipolar Disorder study. 
Bipolar Disorder study data was extracted from Wellcome Trust Case Control Consortium,
and MetaXcan reference population were the European individuals from Thousand Genomes Project
(same as in previous sections)}
\label{fig:BDMP}
\end{figure}

\subsubsection*{Discuss Robustness to reference population choice}

\subsubsection*{Discuss Robustness across populations}

\subsubsection*{Comparison with Gusev/Pasaniuc Zscore imputation approach}

\subsubsection*{Software}

We make our software publicly available on https://github.com/hakyimlab/MetaXcan. The weights and covariances for different tissues can be downloaded from ...
A short working example can be found on the github page. 

TODO: include GUI screen shot

We have also developed a web-based version to further simplify the use of the method. url:

\subsubsection*{Application to publicly available meta analysis results}


\section*{Methods}

\subsection*{Derivation of MetaXcan Formula}

The goal of MetaXcan is to infer the results of PrediXcan using only GWAS summary statistics. Individual level data are not needed for this algorithm. We will define some notations for the derivation of the analytic expressions of MetaXcan.

\subsubsection*{Notation}

$Y$ is the $n$-dimensional vector of phenotype for individuals $i=1,n$.\\
$X_l$ is the allelic dosage for SNP $l$.\\
$T_g$ is the predicted expression (or estimated GREx, genetically regulated expression).\\
We model the phenotype as linear functions of $X_l$ and $T_g$
\begin{align*}
Y &= X_l \beta_l + \eta\\
Y &= T_g \gamma_g + \epsilon
\end{align*}
$\hat\gamma_g$ and $\hat\beta_l$ are the estimated regression coefficients of $Y$ regressed on $T_g$ and $X_l$, respectively. $\hat\gamma_g$ is the result (effect size for gene $g$) we get from PrediXcan whereas $\hat\beta_l$ is the result from a GWAS for SNP $l$.

We will denote as Var and Cov the operators that computes the sample variance and covariances, i.e. Var($Y$) = $\sum_{i=1,n} (Y_i - \bar{Y})^2/n$ with $\bar{Y} = \sum_{i=1,n} Y_i / n$\\
$\hat\sigma^2_l = $  Var$(X_l)$\\
$\hat\sigma^2_g = $  Var$(T_g)$\\
$\hat\sigma^2_Y = $  Var$(Y)$\\
$\Gamma_g = \mathbf{(X-\bar{X})'(X-\bar{X})}/n$ where  $\mathbf{X'}$ is the $n \times p$ matrix of SNP data and $\mathbf{\bar{X}}$ is a $n \times p$ matrix where column $l$ has the column mean of $\mathbf{X}_l$ ($p$ being the number of SNPS in a gene's model).\\

With these notations, our goal is to infer PrediXcan results ($\hat\gamma_g$ and its standard error) using only GWAS results ($\beta_l$ and se), estimated variances of SNPs 
($\hat\sigma^2_l$), covariances between SNPs in each gene model ($\Gamma_g$), and prediction model weights $w_{lg}$.\\

\textbf{Input:}  $\beta_l$, se($\beta_l$), $\hat\sigma^2_l$, $\Gamma_g$, $w_{lg}$.
\textbf{Output:} 
$\hat\gamma_g$, se($\hat\gamma_g$).\\
%From these the Zscore ($Z = \hat\gamma_g$/ se($\hat\gamma_g$)) and p value ($p$= 2 pnorm($-|Z|$) ) can be computed.

Next we list the properties and definitions used in the derivation: 
\begin{equation}
\hat\gamma_g = \frac{ \text{Cov}(T_g,Y) }{ \text{Var}(T_g)}  =  \frac{ \text{Cov}(T_g,Y) }{ \hat\sigma^2_g }
\end{equation}
and  
\begin{equation}
\hat \beta_l = \frac{ \text{Cov}(X_l,Y) }{ \text{Var}(X_l) } =  \frac{ \text{Cov}(X_l,Y) }{ \hat\sigma_l^2 } \label{eq.beta}
\end{equation}
The proportion of variance explained by the covariate ($T_g$ or $X_l$) can be expressed as\\
\begin{equation}
R_g^2 = \hat\gamma^2_g ~ \frac{\hat\sigma_g^2 }{ \hat\sigma^2_Y} \nonumber
\end{equation}
\begin{equation}
R_l^2 = \hat\gamma^2_l ~ \frac{\hat\sigma_l^2 }{ \hat\sigma^2_Y} \nonumber
\end{equation}
By definition
\begin{equation}
T_g = \sum_{l \in \text{Model}_g} w_{lg}X_l 
\end{equation}

The Var($T_g$) = $\hat\sigma^2_g$ can be computed as
\begin{align}
\hat\sigma^2_g & = \text{Var} \left ( \sum_{l \in \text{Model}_g} w_{lg} X_l \right )\nonumber  & \text{}\\  
& = \text{Var} (\mathbf{W}_g \mathbf{X}_g) \nonumber  & \text{where } \mathbf{W}_g \text{is the vector of } w_{lg} \text{for SNPs in the model of } g \\
& = \mathbf{W}_g' \text{Var}( \mathbf{X}_g )\mathbf{W}_g \nonumber  & \text{where } \Gamma_g \text{ is the} \text{Var}( \mathbf{X}_g ) = \text{ covariance matrix of } \mathbf{X}_g \\
& = \mathbf{W}_g'  \Gamma_g \mathbf{W}_g & \text{} \label{eq.var.g}
\end{align}

\subsubsection*{Calculation of regression coefficient $\gamma_g$}

$\hat\gamma_g$ can be expressed as
\begin{align}
\hat \gamma_g & = \frac{ \text{Cov}(\sum_{l \in \text{Model}_g} w_{lg}X_l,Y) }{ \hat\sigma^2_g } & \nonumber \\
& = \sum_{l\in \text{Model}_g} \frac{w_{lg} \text{Cov}(X_l, Y) }{ \hat\sigma^2_g } & \text{by linearity of Cov} \nonumber \\
& = \sum_{l\in \text{Model}_g} \frac{ w_{lg}\hat\beta_l \sigma^2_l }{ \hat\sigma^2_g } & \text{using Eq \ref{eq.beta}} \label{eq.gamma}
\end{align}

\subsubsection*{Calculation of standard error of $\gamma_g$}
Also from the properties of linear regression we know that 
\begin{equation}
\text{se}(\hat\gamma_g) = \sqrt{\text{Var}(\hat\gamma_g)} = \frac{\hat\sigma_\epsilon}{ \sqrt{n \hat\sigma^2_g} } = \frac{\hat\sigma^2_Y (1-R^2_g)}{n\hat\sigma_g^2} \label{eq.se.gamma}
\end{equation}
% where
% \begin{equation}
% \hat\sigma_\epsilon^2 = \sigma_Y^2 (1 - R^2) = \hat\sigma_Y^2 (1 - \hat\sigma^2_g \hat\gamma_g^2 / \hat\sigma_Y^2) =
% \hat\sigma_Y^2 - \hat\sigma^2_g \hat\gamma_g^2  \label{eq.sigma.epsilon}
% \end{equation}
% Thus
% \begin{equation}
% \text{se}(\hat\gamma_g)^2 = \frac{\hat\sigma_Y^2 - \hat\sigma^2_g \hat\gamma_g^2  }{ n \hat\sigma^2_g } \label{eq.se.gamma}
% \end{equation}
In this equation, $\sigma_Y/n$ is not necessarily known but can be estimated using the analogous equation (\ref{eq.se.gamma}) for beta
\begin{equation}
\text{se}(\hat\beta_l) = \frac{\hat\sigma^2_Y (1-R^2_l)}{n\hat\sigma_l^2} \label{eq.se.beta}
\end{equation}
Thus
\begin{equation}
\frac{\hat\sigma_Y^2}{n} = \frac{\text{se}(\hat\beta_l)^2 \hat\sigma_l^2}{(1-R^2_l)} \label{eq.sigYn}
% \hat\sigma_Y^2 &= \text{se}(\hat\beta_l)^2  n \hat\sigma^2_l + \hat\sigma^2_l \hat\beta_l^2   \\
% \hat\sigma_Y^2 &= \hat\sigma^2_l ( n \text{ se}(\hat\beta_l)^2  +  \hat\beta_l^2  )
\end{equation}

Notice that the right hand side of (\ref{eq.sigYn}) is dependent on the SNP $l$ while the left hand side is not. This equality will only approximately in our implementation since we will be using approximate values for $\hat\sigma_l^2$, i.e. from reference population, not the actual study population.

\subsubsection*{Calculation of Z score}

To assess the significance of the association, we need to compute the ratio of the effect size $\gamma_g$ and standard error se($\gamma_g$), or Z score, 
\begin{align}
Z_g & = \frac{ \hat\gamma_g}{\text{se}(\hat\gamma_g)} 
\end{align}

with which we can compute the  p value as
\begin{equation}
p = 2 \text{ pnorm}(-|Z_g|)
\end{equation}

\begin{align}
Zg 
& = \frac{ \hat\gamma_g}{\text{se}(\hat\gamma_g)} \nonumber 
&\text{}\\
%
& =   \sum_{l\in \text{Model}_g} \frac{w_{lg} \hat\beta_l \sigma^2_l }{ \hat\sigma^2_g}   \sqrt{\frac{n}{\hat\sigma_Y^2 }\frac{\hat\sigma^2_g}{(1-R^2_g)} }  
&\text{using Eq. \ref{eq.gamma} and \ref{eq.se.gamma}} \nonumber \\ 
%
&= \sum_{l\in \text{Model}_g}\frac{  w_{lg} \hat\beta_l \sigma^2_l }{ \hat\sigma_g}  \sqrt{\frac{(1-R^2_l)}{\text{se}(\hat\beta_l)^2 \hat\sigma_l^2}} \sqrt{\frac{1}{(1-R^2_g)} } 
& \text{} \nonumber \\
%
&= \sum_{l\in \text{Model}_g}  w_{lg} ~ \frac{\sigma_l}{\hat\sigma_g} ~ \frac{\hat\beta_l}{\text{se}(\hat\beta_l)} ~ \sqrt{\frac{1-R_l^2}{1-R_g^2}}
& \text{}\\
%
&\approx \sum_{l\in \text{Model}_g}  w_{lg} ~ \frac{\sigma_l}{\hat\sigma_g} ~ \frac{\hat\beta_l}{\text{se}(\hat\beta_l)} 
& \text{}
\end{align}
Based on results with actual and simulated data we have found that the last approximation does reduce power since the deviation is only noticeable when the correlation between the SNP or the predicted expression and the phenotype is large, i.e. large effect sizes. When the effects are large the affect the approximation, the loss of power is compensated by the large effect size.

%\subsubsection*{Approximate Formula}
%Assuming that the effect sizes are small, we can approximate $\sigma_Y \approx \sigma_\epsilon \approx \sigma_\eta$ 
%\begin{align}
%Zg & = \frac{ \hat\gamma_g}{\text{se}(\hat\gamma_g)} \nonumber &\text{}\\
%%& =  \frac{ \sum_{l\in \text{Model}_g} w_{lg} \hat\beta_l \sigma^2_l  / \hat\sigma^2_g }{ \frac{\hat\sigma_\epsilon}{ \sqrt{n \hat\sigma^2_g} }}  &\text{using Eq. \ref{eq.gamma} and \ref{eq.se.gamma}} \nonumber \\
%& =  \frac{ \frac{\sum_{l\in \text{Model}_g} w_{lg} \hat\beta_l \sigma^2_l }{ \hat\sigma^2_g} }{ \frac{\hat\sigma_Y}{ \sqrt{n \hat\sigma^2_g} }}  &\text{using Eq. \ref{eq.gamma} and \ref{eq.se.gamma}} \nonumber \\
%&=  \frac{\sqrt{n}}{\hat\sigma_Y}  \frac{ \sum_{l\in \text{Model}_g} w_{lg} \hat\beta_l \sigma^2_l }{ \sqrt{\hat\sigma^2_g}} &\text{} \nonumber \\
%&= \frac{\sqrt{n}}{\hat\sigma_Y}  \frac{ \sum_{l\in \text{Model}_g} w_{lg} \hat\beta_l \sigma^2_l }{\sqrt{(\mathbf{W}_g'  \Gamma_g \mathbf{W}_g)}} & \text{using Eq. \ref{eq.var.g}}
%\end{align}
%
%Using the approximation that $1/\text{se}({\hat\beta_l}) \approx \sqrt{n} \sigma_l / \sigma_Y $
%\begin{equation*}
%Zg = \sum_{l\in \text{Model}_g} w_{lg} \frac{\hat\beta_l}{\text{se}(\beta_l)} \frac{\sigma_l}{\hat\sigma_g} 
%\end{equation*}
% \subsection*{Derivation of equation (\ref{eq.sigma.epsilon})}
% \includegraphics[width=0.8 \textwidth]{plots/derivation-se-epsilon.pdf}


%
%
%\section*{Discussion}
%
%
%Lorem ipsum dolor sit amet, ligula suspendisse nulla pretium, rhoncus tempor fermentum, enim integer ad vestibulum volutpat. Nisl rhoncus turpis est, vel elit, congue wisi enim nunc ultricies sit, magna tincidunt. Maecenas aliquam maecenas ligula nostra, accumsan taciti. Sociis mauris in integer, a dolor netus non dui aliquet, sagittis felis sodales, dolor sociis mauris, vel eu libero cras.
%
%Ac dolor ac adipiscing amet bibendum nullam, lacus molestie ut libero nec, diam et, pharetra sodales, feugiat ullamcorper id tempor id vitae. Mauris pretium aliquet, lectus tincidunt.
%
%Consectetuer arcu ipsum ornare pellentesque vehicula, in vehicula diam, ornare magna erat felis wisi a risus. Justo fermentum id. Malesuada eleifend, tortor molestie, a a vel et. Mauris at suspendisse, neque aliquam faucibus.
%
%% You may title this section "Methods" or "Models". 
%% "Models" is not a valid title for PLoS ONE authors. However, PLoS ONE
%% authors may use "Analysis" 
%\section*{Materials and Methods}
%
%% Do NOT remove this, even if you are not including acknowledgments
%\section*{Acknowledgments}
%
%
%%\section*{References}
%% The bibtex filename
%%\bibliography{ref-igrowth}
%
%\section*{Figure Legends}
%%\begin{figure}[!ht]
%%\begin{center}
%%%\includegraphics[width=4in]{figure_name.2.eps}
%%\end{center}
%%\caption{
%%{\bf Bold the first sentence.}  Rest of figure 2  caption.  Caption 
%%should be left justified, as specified by the options to the caption 
%%package.
%%}
%%\label{Figure_label}
%%\end{figure}
%
%
%\section*{Tables}
%%\begin{table}[!ht]
%%\caption{
%%\bf{Table title}}
%%\begin{tabular}{|c|c|c|}
%%table information
%%\end{tabular}
%%\begin{flushleft}Table caption
%%\end{flushleft}
%%\label{tab:label}
%% \end{table}

\end{document}

